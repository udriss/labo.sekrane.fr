import { initializeNotificationSystem } from './init-notification-system';

// Fonction d'initialisation standalone mise √† jour pour utiliser MySQL
async function initializeNotificationPreferences(forceReset: boolean = false) {
  try {
    console.log('üöÄ Initialisation du syst√®me de notifications bas√© sur MySQL...');
    
    if (forceReset) {
      console.log('‚ö†Ô∏è  Mode r√©initialisation forc√©e activ√©...');
      // La r√©initialisation sera g√©r√©e par le service
    }
    
    await initializeNotificationSystem();
    
    console.log('\nüéâ Syst√®me de notifications MySQL initialis√© avec succ√®s!');
    console.log('\nüìÅ Syst√®me de stockage:');
    console.log('   üìÑ Base de donn√©es MySQL (notification_configs, notification_preferences, notification_history)');
    console.log('   üìÑ Fichiers JSON (compatibilit√© et fallback)');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'initialisation du syst√®me de notifications:', error);
    throw error;
  }
}

// Exporter pour compatibilit√© avec l'ancien syst√®me
export class NotificationPreferencesService {
  async initializeDefaultPreferences(): Promise<void> {
    console.log('‚ö†Ô∏è  DEPRECATED: Utilisation de la m√©thode legacy. Utilisez initializeNotificationSystem() √† la place.');
    await initializeNotificationSystem();
  }
  
  async forceReset(): Promise<void> {
    console.log('‚ö†Ô∏è  DEPRECATED: Utilisation de la m√©thode legacy. Utilisez initializeNotificationSystem() √† la place.');
    await initializeNotificationSystem();
  }
}

export const notificationPreferencesService = new NotificationPreferencesService();

// Ex√©cuter l'initialisation si ce fichier est appel√© directement
if (import.meta.url === `file://${process.argv[1]}`) {
  // V√©rifier si l'argument --force-reset est pass√©
  const forceReset = process.argv.includes('--force-reset');
  
  initializeNotificationPreferences(forceReset)
    .then(() => {
      console.log('‚úÖ Initialisation termin√©e');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå √âchec de l\'initialisation:', error);
      process.exit(1);
    });
}
